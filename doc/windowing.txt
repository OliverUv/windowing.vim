*windowing.txt* For Vim version 7.4     Last change: 2014 May 27

Version: 0.1
Author: OliverUv <oliver@uvman.se>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

        windowing.vim~

==============================================================================
CONTENTS                                        *windowing-contents*

Contents        |windowing-contents|
Instruction     |windowing-instruction|
Minimize        |windowing-minimize|
TODO            |windowing-todo|

==============================================================================
INSTRUCTION                                     *windowing-instruction*

This plugin defines a number of convenience functions for working with several
windows. I don't want to mess with your mappings, so map them yourself!

Generally, mappings can be done in this form >
    nnoremap <silent> KEYSTOMAP :call g:FUNCTION_TO_MAP()<cr>
<

==============================================================================
MINIMIZE                                        *windowing-minimize*

Sets the vertical size of a window to the number of lines in its buffer.

Lets say you have a .html and its .css file open, with the CSS in a window
above the HTML file. Both start out covering 50% of your vertical screen real
estate, but since the CSS file is only 6 lines long, you want it to cover a
lot less so you have room to see your HTML. You put your cursor in the CSS
buffer and run this function: The CSS window is now 6 lines tall.

Suggested mapping: >
    nnoremap <silent> z<cr> :call windowing#minimize_vertically()<cr>
<
(NOTE: will overwrite an existing mapping)
The mapping above fits well with the semantics of the zN<CR> mapping of :h z
As far as I can tell z<CR> is identical to zt but with the annoying side
effect of moving your cursor.

==============================================================================
TODO                                            *windowing-todo*

1. Ignore header comments
-------------------------

Files often have some license header comments. We don't want to see those.
The minimize_vertically action should check for such lines, and deduct them
from the size we set the window to.

After we've executed a minimize_vertically action we also want to make sure
those header comment lines are above the viewable area.

2. Check necessity of action
----------------------------

The minimize_vertically function will do bad things if used where it isn't
supposed to. Say you've only got one window open, with a one line buffer in
it. Call minimize_vertically, and suddenly the area below the status line
covers your entire screen. Splendid. We should ensure that there's a window
available that will use up the width we give away.

3. Minimize horizontally
------------------------

We want a minimize_horizontally function, too. And a minimize function that
just calls both the vertical and horizontal ones.

Also, might not really want to set the width to the number of chars in the
current window's buffer. We could to set it to the max of the number of chars
in buffers of all sibling windows with the same orientations. To clarify, say
you have this layout:

    -------------------
    |         |       |
    |    A    |       |
    |         |       |
    |---------    C   |
    |         |       |
    |    B    |       |
    |         |       |
    -------------------

A and B are siblings in the tree layout of windows, so they will always have
the same width. We want to minimize that width, but never so that we have to
scroll or line-wrap in A or B.

Imagine that A and B have 1000+ lines each. We know they're all very short
lines, so we want to execute the minimize command to give room to C. The
appropriate behaviour would be to find the width of the longest line in both
A and B, and set the width to that.

Also, once we're dealing with line widths, we're going to have to deal with
unicode stuff and character widths. I hear that's a can of worms.

==============================================================================
vim:tw=78:ts=8:ft=help:fen:
